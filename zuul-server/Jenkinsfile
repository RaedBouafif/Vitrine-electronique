pipeline {
	agent any

	
    stages {
        stage('Build') { 
             when {
                beforeAgent true
                expression { env.gitlabTargetBranch == 'B_zuul' }
            }
		 agent { docker 'maven:3-alpine' }
            steps {
			
                sh 'mvn -f zuul-server/pom.xml -B -DskipTests  package' 
				
				stash includes: 'zuul-server/target/*.jar', name: 'targetfiles'
            }
        }
	
		
	stage('image') {
         when {
                
                expression { env.gitlabTargetBranch == 'B_zuul' }
            }
            steps { 
            dir ('zuul-server') {
			   unstash 'targetfiles'
			   script {
			    docker.withServer('tcp://35.180.206.6:4243') {
                        sh 'docker build . -t anonyme5/mzsimage:latest'
                        sh 'docker login -u anonyme5 -p Five12345'
                        sh 'docker push anonyme5/mzsimage:latest'
                    }
			
               }
            }
        }
}
    stage('run in dev') {
         when {
                
                expression { env.gitlabTargetBranch == 'B_zuul' }
            }
            steps {
				script {
				docker.withServer('tcp://35.180.206.6:4243') {
				        sh 'docker rm --force market-zuul-service || true'
                        sh 'docker run --restart=always -d -p 9004:9004 --network=mysubnet --network-alias=market-zuul-service --name=market-zuul-service  anonyme5/mzsimage:latest'
                    }
				}
			   
              
            }
        }
  stage('Run in PRE-PROD Env') {
        when {
                
               beforeAgent true
                expression { env.gitlabTargetBranch == 'develop' }
            }
            agent {
          kubernetes {
              cloud "kubernetes"
           label "kube"
          }
        }
            steps {
				script {
				 container('kubectl') {
                  sh 'kubectl delete deploy market-zuul-service -n jenkins  || true'
                     sh 'kubectl apply -f  zuul-server/zuul-deployment.yaml '
                     sh 'kubectl apply -f  zuul-server/zuul-service.yaml '
                     }
		}
			   
              
            }
        }
  stage('Run in PROD Env') {
        when {
                
               beforeAgent true
                expression { env.gitlabTargetBranch == 'release' }
            }
            agent {
          kubernetes {
              cloud "kubernetesProd"
           label "kubeProd"
          }
        }
            steps {
				script {
				 container('kubectl') {
                  sh 'kubectl delete deploy market-zuul-service -n jenkins  || true'
                     sh 'kubectl apply -f  zuul-server/zuul-deployment.yaml '
                     sh 'kubectl apply -f  zuul-server/zuul-service.yaml '
                     }
		}
			   
              
            }
        }
    }
}
