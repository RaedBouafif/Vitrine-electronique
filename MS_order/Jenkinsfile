pipeline {

    agent any
    
    stages {

        stage('Build data base') {
             when {
                
                expression { env.gitlabTargetBranch == 'B_order' }
                
            }
            steps { 
			   script {
			    docker.withServer('tcp://35.180.206.6:4243') {
                        sh 'docker run -d --restart=always -p 32503:27017 --network=mysubnet --network-alias=market-orderdb --name=market-orderdb mongo || true'
                    }
			 
               }
            
        }
}
        stage('Build image Ms User') {
             when {
                
                expression { env.gitlabTargetBranch == 'B_order' }
            }
            steps { 
            dir ('MS_order') {
			   script {
			    docker.withServer('tcp://35.180.206.6:4243') {
                        sh 'docker build --build-arg DOCKER_ENV=dev . -t anonyme5/mosimage:latest'
                        sh 'docker login -u anonyme5 -p Five12345'
                        sh 'docker push anonyme5/mosimage:latest'
                    }
			 
               }
            }
        }
}
    stage('run in dev') {
          when {
                
                expression { env.gitlabTargetBranch == 'B_order' }
            }
            steps {
				script {
				docker.withServer('tcp://35.180.206.6:4243') {
				        sh 'docker rm --force market-order-service || true'
                        sh 'docker run --restart=always -d -p 4003:4003 --network=mysubnet --network-alias=market-order-service --name=market-order-service   anonyme5/mosimage:latest'
                    }
				}
			   
              
            }
        }
     stage('Run in PRE-PROD Env') {
        when {
                beforeAgent true
                expression { env.gitlabTargetBranch == 'develop' }
            }
            agent {
          kubernetes {
           label "kube"
           cloud "kubernetes"
          }
        }
            steps {
				script {
				 container('kubectl') {
                 sh 'kubectl delete deploy market-order-service -n jenkins  || true'
                 sh 'kubectl apply -f  MS_order/orderDB-deployment.yaml ' 
                     sh 'kubectl apply -f  MS_order/order-deployment.yaml '
                     sh 'kubectl apply -f  MS_order/order-service.yaml ' 
                     }
		}
			   
              
            }
        }
         stage('Run in PROD Env') {
        when {
                beforeAgent true
                expression { env.gitlabTargetBranch == 'release' }
            }
            agent {
          kubernetes {
           label "kubeProd"
           cloud "kubernetesProd"
          }
        }
            steps {
				script {
				 container('kubectl') {
                 sh 'kubectl delete deploy market-order-service -n jenkins  || true'
                 sh 'kubectl apply -f  MS_order/orderDB-deployment.yaml ' 
                     sh 'kubectl apply -f  MS_order/order-deployment.yaml '
                     sh 'kubectl apply -f  MS_order/order-service.yaml ' 
                     }
		}
			   
              
            }
        }


    }
   
}